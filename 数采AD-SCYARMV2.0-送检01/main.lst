C51 COMPILER V9.52.0.0   MAIN                                                              01/03/2019 08:50:41 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE source\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) TABS(2) OBJECT(.\
                    -output\main.obj)

line level    source

   1          #include "STC15F2K60S2.H"
   2          #include "delay.h"
   3          #include "time.h"
   4          #include "uart.h"
   5          #include "LTC1864.H"
   6          #include "STC15_SPI.h"
   7          #include <stdio.h>
   8          #include <string.h>
   9          #include <stdlib.h>
  10          
  11          sbit IO_RST = P5^4;
  12          sbit TEST1 = P2^6;
  13          sbit TEST0 = P2^5;
  14          xdata uchar sendbuf[200]="0";
  15          //xdata unsigned char tempbuf[50]="0";
  16          unsigned char *strtemp;
  17          xdata unsigned int  crc,len,CRC_16;
  18          xdata int kk;
  19          
  20          int String_Search(unsigned char *substr,unsigned char *mainstr,unsigned char n);
  21          unsigned int CRC16(unsigned char *databuff, unsigned int len); 
  22          void Hex_To_Str(unsigned int x,char *Str);
  23          xdata char info[6];
  24          //xdata char result[11]={'0'};
  25          //xdata int point_front=0;
  26          //xdata int point_back=0;
  27          //void  float_to_2int(float f);
  28          //void Int_To_Str(int x,char *Str,int flag);
  29          
  30          
  31          xdata unsigned char CRC_Buf[5];
  32          char valueToHexCh(unsigned int value);
  33          
  34          xdata unsigned char ad_road=0;
  35          xdata uint AD0=0,AD1=0,AD2=0,AD3=0,AD4=0,AD5=0,AD6=0,AD7=0;
  36          xdata uchar sendbuf_spi[200]="0";
  37          void main()
  38          {
  39   1        uint iLoop;
  40   1        Delay500ms();
  41   1        WDT_CONTR = 0x3e;
  42   1      //  P1M1|=(1<<4);
  43   1      //  P1M0|=(1<<4);
  44   1      //  P1M1|=(1<<3);
  45   1      //  P1M0|=(1<<3);
  46   1      //  IO_RST=0;
  47   1      //  Delay500ms();
  48   1        P3M1=0;
  49   1        P3M0=0;
  50   1        TEST1=0;
  51   1        Timer1Init();
  52   1        init_uart1();
  53   1          InitSPI();                  //初始化SPI    
  54   1        IO_RST=1;
C51 COMPILER V9.52.0.0   MAIN                                                              01/03/2019 08:50:41 PAGE 2   

  55   1      
  56   1        while(1)
  57   1        {
  58   2      //    ad_road=4;
  59   2          switch (ad_road)
  60   2          {
  61   3            case 0:AD0=LTC1864_Read(ad_road);
  62   3                break;
  63   3            case 1:AD1=LTC1864_Read(ad_road);
  64   3                break;
  65   3            case 2:AD2=LTC1864_Read(ad_road);
  66   3                break;
  67   3            case 3:AD3=LTC1864_Read(ad_road);
  68   3                break;
  69   3            case 4:AD4=LTC1864_Read(ad_road);
  70   3                break;
  71   3            case 5:AD5=LTC1864_Read(ad_road);
  72   3                break;
  73   3            case 6:AD6=LTC1864_Read(ad_road);
  74   3                break;
  75   3            case 7:AD7=LTC1864_Read(ad_road);
  76   3                break;
  77   3            default:
  78   3              break;
  79   3          }
  80   2          ad_road++;
  81   2          if(ad_road>=8) ad_road=0;
  82   2          if(Flag_safe==1)
  83   2          {
  84   3            TEST1=~TEST1;
  85   3            IO_RST=0;
  86   3            Delay500ms();
  87   3            IO_RST=1;
  88   3            dog_state=1;
  89   3            Flag_safe=0;
  90   3          }
  91   2          WDT_CONTR = 0x3e; //喂狗
  92   2          TEST0 =~TEST0;
  93   2      
  94   2          memset(sendbuf,0,200);
  95   2          //memset(tempbuf,0,50);
  96   2          memset(CRC_Buf,0,5);
  97   2          //strcat(sendbuf,"##FC=2;U0=");
  98   2          iLoop  = sprintf(sendbuf,"##FC=2;U0=%u",AD0);
  99   2          iLoop += sprintf(sendbuf + iLoop,",U1=%u",AD1);
 100   2          iLoop += sprintf(sendbuf + iLoop,",U2=%u",AD2);
 101   2          iLoop += sprintf(sendbuf + iLoop,",U3=%u",AD3);
 102   2          iLoop += sprintf(sendbuf + iLoop,",U4=%u",AD4);
 103   2          iLoop += sprintf(sendbuf + iLoop,",U5=%u",AD5);
 104   2          iLoop += sprintf(sendbuf + iLoop,",U6=%u",AD6);
 105   2          iLoop += sprintf(sendbuf + iLoop,",U7=%u;CRC=",AD7);
 106   2      
 107   2          CRC_16=CRC16(&sendbuf[2], strlen(sendbuf)-2);
 108   2          CRC_Buf[0]=valueToHexCh((CRC_16&0xF000)>>12);
 109   2          CRC_Buf[1]=valueToHexCh((CRC_16&0x0F00)>>8);
 110   2          CRC_Buf[2]=valueToHexCh((CRC_16&0xF0)>>4);
 111   2          CRC_Buf[3]=valueToHexCh(CRC_16&0x0F);
 112   2          CRC_Buf[4]='\0';
 113   2          strcat(sendbuf,CRC_Buf);
 114   2          strcat(sendbuf,"\r\n");
 115   2          strcpy (sendbuf_spi,sendbuf);
 116   2      
C51 COMPILER V9.52.0.0   MAIN                                                              01/03/2019 08:50:41 PAGE 3   

 117   2          if(sendok_flg)
 118   2          {
 119   3            ET1=0;        
 120   3      
 121   3            SPI_Send_String(sendbuf_spi);
 122   3            ET1=1;        
 123   3            sendok_flg=0;
 124   3            receive_flag=0; 
 125   3      
 126   3          }
 127   2      
 128   2          if(uart1_sendok_flg)
 129   2          {
 130   3            send_string_uart1(sendbuf_spi);
 131   3            uart1_sendok_flg=0;
 132   3          }
 133   2      
 134   2      //    clear_buf_spi();
 135   2      //    SPI_Send_String(sendbuf);
 136   2      
 137   2      //      }
 138   2      //    }
 139   2      //    sendok_flg=0;
 140   2      //    receive_flag=0; 
 141   2      //    EA=1; 
 142   2      //  }
 143   2        }
 144   1      
 145   1      
 146   1      }
 147          
 148          //int String_Search(unsigned char *substr,unsigned char *mainstr,unsigned char n)
 149          //{ 
 150          //  unsigned int i=0,max_len=0; 
 151          //
 152          //  max_len = strlen(mainstr);
 153          //      
 154          //  for(i=0;i<max_len;i++)    
 155          //  {
 156          //    if(*(mainstr+i) == *substr)
 157          //    {
 158          //      if(strncmp(mainstr+i,substr,n) == 0)
 159          //      {
 160          //        return (i+n);
 161          //      }
 162          //    }   
 163          //  }
 164          //  return (-1);
 165          //}
 166          
 167          unsigned int CRC16(unsigned char *databuff, unsigned int len) 
 168          {          
 169   1      unsigned char   i;
 170   1          unsigned int  wkg = 0xFFFF;
 171   1      
 172   1          while( len-- )
 173   1          {
 174   2             wkg  = (wkg>>8)&0x00FF;
 175   2             wkg ^= *databuff++;
 176   2      
 177   2         for ( i = 0 ; i < 8; i++ )
 178   2         {
C51 COMPILER V9.52.0.0   MAIN                                                              01/03/2019 08:50:41 PAGE 4   

 179   3            if ( wkg & 0x0001 )
 180   3            {
 181   4              wkg = ( wkg >> 1 ) ^ 0xa001;
 182   4            }
 183   3            else
 184   3            {
 185   4              wkg = wkg >> 1;
 186   4            }
 187   3         }
 188   2          }
 189   1          return( wkg );
 190   1      }
 191          
 192          char valueToHexCh(unsigned int value)
 193          {
 194   1        char result = '\0';
 195   1        if(value >= 0 && value <= 9){
 196   2          result = (char)(value + 48); //48为ascii编码的‘0’字符编码值
 197   2        }
 198   1        else if(value >= 10 && value <= 15){
 199   2          result = (char)(value - 10 + 65); //减去10则找出其在16进制的偏移量，65为ascii的'A'的字符编码值
 200   2        }
 201   1        else{
 202   2          ;
 203   2        }
 204   1      
 205   1        return result;
 206   1      }
 207          
 208          /*void  float_to_2int(float f)
 209          {
 210            point_front= (int)f;
 211            point_back=(int)((f-point_front)*10000);
 212          }*/
 213          
 214          /*void Int_To_Str(int x,char *Str,int flag)
 215          {
 216              int t;
 217              char *Ptr,Buf[5];
 218              int i = 0;
 219            int n = 0;
 220            int int_temp=0;
 221              Ptr = Str;
 222            memset(Buf,0x30,5);
 223            int_temp =x;
 224              if(x < 10)    // 当整数小于10时,转化为"0x"的格式
 225              {
 226              if(flag==0)    //处理小数点后面的数据
 227              {
 228                    for(i=2;i >= 0;i --) *Ptr++=0x30;   
 229                    *Ptr ++ = x+0x30;
 230              }
 231              else      //处理小数点前面的数据
 232              {
 233                    *Ptr ++ = x+0x30;
 234              
 235              }
 236          
 237              }
 238              else
 239              {
 240              if(flag==0)
C51 COMPILER V9.52.0.0   MAIN                                                              01/03/2019 08:50:41 PAGE 5   

 241              {
 242                    while(x > 0)
 243                    {
 244                        t = x % 10;
 245                        x = x / 10;
 246                        Buf[i++] = t+0x30;  // 通过计算把数字转化成ASCII码形式
 247                    }
 248                    i -- ;
 249                    for(i=3;i >= 0;i --)    // 将得到的字符串倒序
 250                    {
 251                        *(Ptr++) = Buf[i];
 252                    }  
 253              }
 254              else
 255              {     
 256                while(int_temp)
 257                
 258                { 
 259                  int_temp=int_temp/10;
 260                  ++n;
 261                }
 262                n--;
 263          
 264                    while(x > 0)
 265                    {
 266                        t = x % 10;
 267                        x = x / 10;
 268                        Buf[i++] = t+0x30;  // 通过计算把数字转化成ASCII码形式
 269                    }
 270                    i -- ;
 271                    for(i=n;i >= 0;i --)    // 将得到的字符串倒序
 272                    {
 273                        *(Ptr++) = Buf[i];
 274                    }     
 275              
 276              }
 277              }
 278              *Ptr = '\0';
 279          
 280          }*/
 281          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    923    ----
   CONSTANT SIZE    =     70    ----
   XDATA SIZE       =    436    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
